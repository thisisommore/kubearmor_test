name: Deploy to MicroK8s with KubeArmor

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install MicroK8s
      run: |
        bash -c "$(curl -sfL https://raw.githubusercontent.com/kubearmor/KubeArmor/main/contribution/microk8s/install_microk8s.sh)"
        sudo usermod -a -G microk8s $USER
        sudo chown -f -R $USER ~/.kube
        sudo microk8s status --wait-ready
        sudo microk8s kubectl config view --raw > kubeconfig.yaml
        export KUBECONFIG=kubeconfig.yaml
        sudo microk8s kubectl get nodes


    # Install karmor cli tool
    - name: Install KubeArmor CLI tool
      run: |
        curl -sfL http://get.kubearmor.io/ | sudo sh -s -- -b /usr/local/bin

    # Log in to Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    # Build and push your Docker image
    - name: Build and push Docker image
      uses: docker/build-push-action@v2
      with:
        context: .
        file: Dockerfile
        push: true
        tags: thisisommore/kubearmor_test:latest

    # Deploy your application to the Minikube cluster
    - name: Deploy to Minikube cluster
      run: |
        kubectl apply -f deployment.yml
        sleep 8
        kubectl describe po -l app="kubearmor-test"
        
    # Install KubeArmor in the cluster
    - name: Install KubeArmor in the cluster
      run: |
        kubectl apply -f https://raw.githubusercontent.com/kubearmor/discovery-engine/dev/deployments/k8s/deployment.yaml
        sudo karmor install
        sleep 10
        kubectl get all -n accuknox-agents
    # Deploy KubeArmor policies
    - name: Deploy KubeArmor policies
      run: |
        sleep 10
        kubectl apply -f cat-echo-block.yml

    # Wait for 12 seconds to generate KubeArmor summary
    - name: Generate KubeArmor summary
      run: |
        sleep 30
        sudo apt-get update && sudo apt-get install -y socat jq
        POD_NAME=$(kubectl get pods -n kube-system -l k8s-app=kubearmor -o jsonpath='{.items[0].metadata.name}')
        PORT=$(python3 -c 'import socket; s = socket.socket(); s.bind(("", 0)); print(s.getsockname()[1]); s.close()')
        kubectl port-forward -n kube-system $POD_NAME $PORT:32767 &
        sleep 15
        curl http://localhost:$PORT/v1/kubearmor/summary
